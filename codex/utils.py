import subprocess
import shlex
import logging
import sys

log = logging.getLogger(__name__)

def tidy_dict(d):
    """
    Tidy dicts common in helpdoc's xml output.
    Calls tidy_str on both keys and values.
    """
    tidy_d = {}
    for k, v in d.items():
        if isinstance(k, str):
            k = tidy_str(k)
        if v and isinstance(v, str):
            v = tidy_str(v)
        tidy_d[k] = v
    return tidy_d


def tidy_str(s):
    """
    Tidy strings common in helpdoc's xml output.
    Remove newlines, strip whitespace, remove single quotes.
    """
    s = s.replace("\n", " ").strip()
    if s and s[0] == "'" and s[-1] == "'":
        s = s[1:-1]
    return s


def wipe_style(html):
    """
    Remove style, align, valign, and width attributes from a lxml.html.HtmlElement
    Used for cleaning styles from the html generated by QE's helpdoc.
    """
    to_delete = ["style", "align", "valign", "width"]
    for attr in to_delete:
        if attr in html.attrib:
            del html.attrib[attr]


def run_command(command):
    """
    Run a command and return the result. If the command fails, raise an exception.
    """
    log.info(f"Command: {command}")
    command = shlex.split(command)

    try:
        result = subprocess.run(command, capture_output=True, check=True)
    except subprocess.CalledProcessError as exc:
        log.info(
            f"Status : FAIL (return code {exc.returncode}),\n"
            f"stdout:\n {exc.stdout},\n"
            f"stderr:\n {exc.stderr}"
        )
        return exc.returncode
    if result.stdout:
            log.debug(f"Command stdout: {result.stdout.decode('utf-8')}")
    if result.stderr:
            log.debug(f"Command stderr: {result.stderr.decode('utf-8')}")

    return result.returncode
